@model List<SchroniskoWebowka.Models.Pies>
@{

}

<h1>Psy</h1>
<button onclick="hideFilter()" id="hiddeButton" type="button" class="btn btn-primary" style="background-color:#5d2339; border-color: #5d2339">Schowaj filtry</button>
<div class="myfiltrationpanel" id="filtrPanel">
    <form id= "Form">
    <table class="myfiltrationtable">
        <tr>
            <th>Nazwa:</th>
            <th>Rasa:</th>
        </tr>
        <tr>
            <td>
                <input type="text" id="nazwainput" class="form-control myinput" />
            </td>
            <td>
                <input type="text" id="rasainput" class="form-control myinput" />
            </td>
        </tr>
        <tr>
            <th>Data przyjęcia od:</th>
            <th>Data przyjęcia do:</th>
        </tr>
        <tr>
            <td>
                <input type="date" class="form-control myinput" id="dataodinput">
            </td>
            <td>
                <input type="date" class="form-control myinput" id="datadoinput">
            </td>
        </tr>
        <tr>
            <th>Płeć:</th>
            <th>Strefa</th>
        </tr>
        <tr>
            <td>
                <select name="Plec" id="plecinput" class="form-control myinput">
                    <option value="">Wybierz płeć</option>
                    <option value="samiec">Samiec</option>
                    <option value="suka">Suka</option>
                </select>
            </td>
            <td>
                @Html.DropDownList("WybranaStrefa", ViewBag.Strefa as SelectList, "Wybierz strefę", new { @class = "form-control myinput", @id = "strefainput" })
            </td>
        </tr>
        <tr>
            <td>
                <label for="isDostepny"> Tylko dostępne</label>
                <input class="form-check-input" type="checkbox" id="dostepnyinput" name="isdostepny" value="Treu">
            </td>
            <td>
                <button type="button" class="btn btn-primary" onclick="filterTable()" style="background-color:#5d2339; border-color: #5d2339">Filtruj</button>
                    <button type="button" class="btn btn-primary" onClick="clearInput()" style="background-color:#5d2339; border-color: #5d2339">Wyczyść</button>
            </td>
        </tr>
    </table>
    </form>

</div>

<table class="table" id="dataTable">
    <thead>
        <tr>
            <th scope="col">Nazwa</th>
            <th scope="col">Rasa</th>
            <th scope="col">Wiek</th>
            <th scope="col">Płeć</th>
            <th scope="col">Dostępny</th>
            <th scope="col">Strefa</th>
            <th scope="col">Akcja</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var pies in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => pies.PiesNazwa)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => pies.Rasa.RasaNazwa)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => pies.Wiek.WiekNazwa)
                </td>
                <td>
                    @if (pies.PiesCzySuka)
                    {
                        <text>Suka</text>
                    }
                    else
                    {
                        <text>Samiec</text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => pies.PiesCzyDostepny )
                </td>
                <td>
                    @Html.DisplayFor(modelItem => pies.Strefa.StrefaNazwa)
                </td>
                <td>
                    <a href="Edit/@pies.PiesId">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                            <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.5.5 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11z" />
                        </svg>Edycja
                    </a>
                    <a href="Detal/@pies.PiesId" style="margin-left: 5px">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard2-fill" viewBox="0 0 16 16">
                            <path d="M9.5 0a.5.5 0 0 1 .5.5.5.5 0 0 0 .5.5.5.5 0 0 1 .5.5V2a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 2v-.5a.5.5 0 0 1 .5-.5.5.5 0 0 0 .5-.5.5.5 0 0 1 .5-.5z" />
                            <path d="M3.5 1h.585A1.5 1.5 0 0 0 4 1.5V2a1.5 1.5 0 0 0 1.5 1.5h5A1.5 1.5 0 0 0 12 2v-.5q-.001-.264-.085-.5h.585A1.5 1.5 0 0 1 14 2.5v12a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-12A1.5 1.5 0 0 1 3.5 1" />
                        </svg>
                        Detale
                    </a>

                    <a href="Zdjecie/@pies.PiesId" style="margin-left: 5px">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-images" viewBox="0 0 16 16">
                            <path d="M4.502 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3" />
                            <path d="M14.002 13a2 2 0 0 1-2 2h-10a2 2 0 0 1-2-2V5A2 2 0 0 1 2 3a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v8a2 2 0 0 1-1.998 2M14 2H4a1 1 0 0 0-1 1h9.002a2 2 0 0 1 2 2v7A1 1 0 0 0 15 11V3a1 1 0 0 0-1-1M2.002 4a1 1 0 0 0-1 1v8l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71a.5.5 0 0 1 .577-.094l1.777 1.947V5a1 1 0 0 0-1-1z" />
                        </svg>
                        Zdjęcie
                    </a>
                </td>
                <td style="display: none;">@Html.DisplayFor(modelItem => pies.PiesDataUrodzenia, new { @id = "datatimeInfo" })</td>
            </tr>
        }
    </tbody>
</table>

<a asp-controller="Psy" asp-action="Add">Dodaj nowego psa</a>

<script>
    function filterTable() {
        const tableBody = document.getElementById("dataTable");
        const rows = tableBody.querySelectorAll('tr');

        const inputNazwa = document.getElementById("nazwainput").value.toLowerCase();
        const inputRasa = document.getElementById("rasainput").value.toLowerCase();
        const inputDostepnosc = document.getElementById("dostepnyinput").checked;
        const inputDataOd = document.getElementById("dataodinput").value;
        const inputDataDo = document.getElementById("datadoinput").value;
        
        const selectElement = document.getElementById("strefainput");
        const selectedOption = selectElement.options[selectElement.selectedIndex];
        var inputStrefa = selectedOption.textContent.toLowerCase();
        if (inputStrefa == "wybierz strefę") {
            inputStrefa = "";
        }

        const selectElementPlec = document.getElementById("plecinput");
        const selectedPlec = selectElementPlec.options[selectElementPlec.selectedIndex];
        var inputPlec = selectedPlec.value;

        // console.log("guzik worki")
        // console.log(rows)
        
        for (i = 1; i < rows.length; i++) {
            var nazwaCell = rows[i].getElementsByTagName("td")[0];
            var rasaCell = rows[i].getElementsByTagName("td")[1];
            var strefaCell = rows[i].getElementsByTagName("td")[5];
            var dostepnyCell = rows[i].getElementsByTagName("td")[4];
            var dataCell = rows[i].getElementsByTagName("td")[7];
            var plecCell = rows[i].getElementsByTagName("td")[3];

            var nazwaText = nazwaCell.innerText.toLowerCase() || nazwaCell.textContent.toLowerCase()
            var rasaText = rasaCell.innerText.toLowerCase() || rasaCell.textContent.toLowerCase()
            var strefaText = strefaCell.innerText.toLowerCase() || strefaCell.textContent.toLowerCase()
            var plecText = plecCell.innerText.toLowerCase() || plecCell.textContent.toLowerCase()
            var checkbox = dostepnyCell.querySelector('input[type="checkbox"]');
            var isChecked = checkbox.checked;

            var dateString = dataCell.textContent;
            var parts = dateString.split(' ');
            var datePart = parts[0].split('.');
            var timePart = parts[1].split(':');
            var dateObject = new Date(datePart[2], datePart[1] - 1, datePart[0], timePart[0], timePart[1], timePart[2]);
            var dateinputOd = new Date(inputDataOd);
            var dateinputDo = new Date(inputDataDo);

            const nameMatch = nazwaText.includes(inputNazwa);
            const rasaMatch = rasaText.includes(inputRasa);
            const strefaMatch = strefaText.includes(inputStrefa);
            const plecMatch = plecText.includes(inputPlec);

            rows[i].style.display = '';
            if (!nameMatch) {
                rows[i].style.display = 'none';
            }
            if (!rasaMatch) {
                rows[i].style.display = 'none';
            }
            if (inputDostepnosc) {
                if (!isChecked) {
                        rows[i].style.display = 'none';
                }
            }
            if (!strefaMatch) {
                rows[i].style.display = 'none';
            }
            if (dateObject < dateinputOd || dateObject > dateinputDo) {
                rows[i].style.display = 'none';
            }
            if (!plecMatch) {
                rows[i].style.display = 'none';
            }
        }
    }

    function clearInput() {
        document.getElementById("Form").reset();
        filterTable();
    }

    function hideFilter() {
        var x = document.getElementById("filtrPanel");
        var y = document.getElementById("hiddeButton")
        if (x.style.display === "none") {
            x.style.display = "block";
            y.textContent = "Schowaj filtry"

        } else {
            x.style.display = "none";
            y.textContent = "Pokaz filtry";
        }
    }
</script>
